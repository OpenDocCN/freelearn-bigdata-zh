["```py\n%matplotlib inline\nimport numpy as np\nfrom pylab import *\npageSpeeds = np.random.normal(3.0, 1.0, 1000)\npurchaseAmount = 100 - (pageSpeeds + np.random.normal(0, 0.1,\n1000)) * 3\nscatter(pageSpeeds, purchaseAmount) \n\n```", "```py\nfrom scipy import stats\n\nslope, intercept, r_value, p_value, std_err =     \nstats.linregress(pageSpeeds, purchaseAmount) \n\n```", "```py\nr_value ** 2\n\n```", "```py\nimport matplotlib.pyplot as plt\ndef predict(x):\nreturn slope * x + intercept\nfitLine = predict(pageSpeeds)\nplt.scatter(pageSpeeds, purchaseAmount)\nplt.plot(pageSpeeds, fitLine, c='r')\nplt.show()\n\n```", "```py\n%matplotlib inline\nfrom pylab import *\nnp.random.seed(2)\npageSpeeds = np.random.normal(3.0, 1.0, 1000)\npurchaseAmount = np.random.normal(50.0, 10.0, 1000) / pageSpeeds\nscatter(pageSpeeds, purchaseAmount)\n\n```", "```py\nx = np.array(pageSpeeds)\ny = np.array(purchaseAmount)\np4 = np.poly1d(np.polyfit(x, y, 4))\n\n```", "```py\nimport matplotlib.pyplot as plt\n\nxp = np.linspace(0, 7, 100)\nplt.scatter(x, y)\nplt.plot(xp, p4(xp), c='r')\nplt.show()\n\n```", "```py\nfrom sklearn.metrics import r2_score\nr2 = r2_score(y, p4(x))\n\nprint r2\n\n```", "```py\nx = np.array(pageSpeeds)\ny = np.array(purchaseAmount)\n\np4 = np.poly1d(np.polyfit(x, y, 3))  \n\n```", "```py\nimport pandas as pd\ndf = pd.read_excel('http://cdn.sundog-soft.com/Udemy/DataScience/cars.xls')\n\n```", "```py\ndf.head()\n\n```", "```py\nimport statsmodels.api as sm\n\ndf['Model_ord'] = pd.Categorical(df.Model).codes\nX = df[['Mileage', 'Model_ord', 'Doors']]\ny = df[['Price']]\n\nX1 = sm.add_constant(X)\nest = sm.OLS(y, X1).fit()\n\nest.summary() \n\n```", "```py\ny.groupby(df.Doors).mean()\n\n```"]