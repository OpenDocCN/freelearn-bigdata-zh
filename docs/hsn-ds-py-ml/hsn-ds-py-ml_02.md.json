["```py\nimport numpy as np \n\nincomes = np.random.normal(27000, 15000, 10000) \nnp.mean(incomes) \n\n```", "```py\nOut[1]: 27173.098561362742\n\n```", "```py\n%matplotlib inline \nimport matplotlib.pyplot as plt \nplt.hist(incomes, 50) \nplt.show() \n\n```", "```py\nnp.median(incomes) \n\n```", "```py\nOut[4]: 26911.948365056276 \n\n```", "```py\nincomes = np.append(incomes, [1000000000]) \n\n```", "```py\nnp.median(incomes) \n\n```", "```py\nOut[5]: 26911.948365056276 \n\n```", "```py\nnp.mean(incomes) \n\n```", "```py\nOut[5]:127160.38252311043 \n\n```", "```py\nages = np.random.randint(18, high=90, size=500) \nages \n\n```", "```py\nfrom scipy import stats \nstats.mode(ages) \n\n```", "```py\nOut[11]: ModeResult(mode=array([39]), count=array([12])) \n\n```", "```py\nages = np.random.randint(18, high=90, size=500) \nages \n\nfrom scipy import stats \nstats.mode(ages) \n\n```", "```py\nOut[11]: ModeResult(mode=array([29]), count=array([14])) \n\n```", "```py\n%matplotlib inline \nimport numpy as np \nimport matplotlib.pyplot as plt \nincomes = np.random.normal(100.0, 20.0, 10000) \nplt.hist(incomes, 50) \nplt.show() \n\n```", "```py\nincomes.std() \n\n```", "```py\n20.024538249134373 \n\n```", "```py\nincomes.var() \n\n```", "```py\n400.98213209104557 \n\n```", "```py\nimport numpy as np \nImport matplotlib.pyplot as plt \n\nvalues = np.random.uniform(-10.0, 10.0, 100000) \nplt.hist(values, 50) \nplt.show() \n\n```", "```py\nfrom scipy.stats import norm \nimport matplotlib.pyplot as plt \n\nx = np.arange(-3, 3, 0.001) \nplt.plot(x, norm.pdf(x)) \n\n```", "```py\nimport numpy as np \nimport matplotlib.pyplot as plt \n\nmu = 5.0 \nsigma = 2.0 \nvalues = np.random.normal(mu, sigma, 10000) \nplt.hist(values, 50) \nplt.show() \n\n```", "```py\nfrom scipy.stats import expon \nimport matplotlib.pyplot as plt \n\nx = np.arange(0, 10, 0.001) \nplt.plot(x, expon.pdf(x)) \n\n```", "```py\nfrom scipy.stats import expon \nimport matplotlib.pyplot as plt \n\nx = np.arange(0, 10, 0.001) \nplt.plot(x, expon.pdf(x)) \n\n```", "```py\nfrom scipy.stats import poisson \nimport matplotlib.pyplot as plt \n\nmu = 500 \nx = np.arange(400, 600, 0.5) \nplt.plot(x, poisson.pmf(x, mu)) \n\n```", "```py\n%matplotlib inline \nimport numpy as np \nimport matplotlib.pyplot as plt \n\nvals = np.random.normal(0, 0.5, 10000) \n\nplt.hist(vals, 50) \nplt.show() \n\n```", "```py\nnp.percentile(vals, 50) \n\n```", "```py\n0.0053397035195310248\n\n```", "```py\nnp.percentile(vals, 90) \n\n```", "```py\nOut[4]: 0.64099069837340827 \n\n```", "```py\nnp.percentile(vals, 20) \n\n```", "```py\nOut[5]:-0.41810340026619164 \n\n```", "```py\nimport numpy as np \nimport matplotlib.pyplot as plt \n\nvals = np.random.normal(0, 0.5, 10000) \n\nplt.hist(vals, 50) \nplt.show() \n\n```", "```py\nnp.mean(vals)\n\n```", "```py\nOut [2]:-0.0012769999428169742\n\n```", "```py\nnp.var(vals)\n\n```", "```py\nOut[3]:0.25221246428323563\n\n```", "```py\nimport scipy.stats as sp\nsp.skew(vals)\n\n```", "```py\nOut[4]: 0.020055795996111746\n\n```", "```py\nsp.kurtosis(vals)\n\n```", "```py\nOut [5]:0.059954502386585506\n\n```"]