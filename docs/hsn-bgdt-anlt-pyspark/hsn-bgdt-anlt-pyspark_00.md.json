["```py\ntest(\"Should use immutable DF API\") {\n    import spark.sqlContext.implicits._\n    //given\n    val userData =\n        spark.sparkContext.makeRDD(List(\n            UserData(\"a\", \"1\"),\n            UserData(\"b\", \"2\"),\n            UserData(\"d\", \"200\")\n        )).toDF()\n```", "```py\nclass ImmutableRDD extends FunSuite {\n    val spark: SparkContext = SparkSession\n        .builder().master(\"local[2]\").getOrCreate().sparkContext\n\ntest(\"RDD should be immutable\") {\n    //given\n    val data = spark.makeRDD(0 to 5)\n```", "```py\ntotal_duration/(normal_data.count())\n```"]