["```scala\nchmod 400 my-keyfile.pem\n\n```", "```scala\nssh -i [keypair] [username]@[public DNS or IP]\n\n```", "```scala\nssh -i my-keypair.pem ubuntu@ec2-54-200-221-254.us-west-2.compute.amazonaws.com\n\n```", "```scala\nwget http://www.apache.org/dist/whirr/whirr-0.8.2/whirr-0.8.2.tar.gz\ntar -zxf whirr-0.8.2.tar.gz\n\n```", "```scala\nWHIRR_HOME=/Users/tgoetz/whirr-0.8.2\nexport PATH=$PATH:$WHIRR_HOME/bin\n\n```", "```scala\nssh-keygen -t rsa -P '' -f ~/.ssh/id_rsa_whirr\n\n```", "```scala\nAWSAccessKeyId=QRIXIUUTWRXXXXTPW4UA\nAWSSecretKey=/oA7m/XW+x1eGQiyxxxTsU+rxRSIxxxx3EbM1yg6\n```", "```scala\nmkdir ~/.whirr\necho \"PROVIDER=aws-ec2\" > ~/.whirr/credentials\necho \"IDENTITY=[your EC2 Access Key ID]\" >> ~/.whirr/credentials\necho \"CREDENTIAL=[your EC2 Secret Access Key]\" >> ~/.whirr/credentials\n\n```", "```scala\nwhirr.cluster-name=zookeeper\nwhirr.instance-templates=3 zookeeper\n```", "```scala\nwhirr.private-key-file=${sys:user.home}/.ssh/id_rsa_whirr\nwhirr.public-key-file=${whirr.private-key-file}.pub\n```", "```scala\nwhirr.image-id=us-east-1/ami-55dc0b3c\nwhirr.hardware-id=t1.micro\nwhirr.location=us-east-1\n```", "```scala\nwhirr.cluster-name=zookeeper\nwhirr.instance-templates=3 zookeeper\nwhirr.private-key-file=${sys:user.home}/.ssh/id_rsa_whirr\nwhirr.public-key-file=${whirr.private-key-file}.pub\nwhirr.image-id=us-east-1/ami-55dc0b3c\nwhirr.hardware-id=t1.micro\nwhirr.location=us-east-1\n```", "```scala\nwhirr launch-cluster --config zookeeper.properties\n\n```", "```scala\n[zookeeper]: ssh -i /Users/tgoetz/.ssh/id_rsa_whirr -o \"UserKnownHostsFile /dev/null\" -o StrictHostKeyChecking=no storm@54.208.197.231 \n[zookeeper]: ssh -i /Users/tgoetz/.ssh/id_rsa_whirr -o \"UserKnownHostsFile /dev/null\" -o StrictHostKeyChecking=no storm@54.209.143.46\n[zookeeper]: ssh -i /Users/tgoetz/.ssh/id_rsa_whirr -o \"UserKnownHostsFile /dev/null\" -o StrictHostKeyChecking=no storm@54.209.22.63\n\n```", "```scala\nwhirr destroy-cluster --config zookeeper.properties\n\n```", "```scala\nwget http://repo1.maven.org/maven2/com/github/ptgoetz/whirr-storm/1.0.0/whirr-storm-1.0.0.jar -P $WHIRR_HOME/lib\n```", "```scala\n$ whirr\n\u2026\n storm-drpc\n storm-logviewer\n storm-nimbus\n storm-supervisor\n storm-ui\n\n```", "```scala\nwhirr.instance-templates=[# of nodes] [role 1]+[role 2],[# of nodes] [role 3]+[role n]\n```", "```scala\nwhirr.instance-template=1 storm-nimbus+storm-ui+storm-logviewer+storm-supervisor+zookeeper\n```", "```scala\nwhirr.instance-templates=1 storm-nimbus+storm-ui,3 storm-supervisor+storm-logviewer, 3 zookeeper\n```", "```scala\nStorm <command> [arguments] \u2013c nimbus.host=<nimbus hostname>\n```", "```scala\nwhirr-storm.topology.message.timeout.secs=30\n```", "```scala\ntopology.message.timeout.secs: 30\n```", "```scala\nwhirr-storm.supervisor.slots.ports=6700,6701,6702,6703\n```", "```scala\nsupervisor.slots.ports:\n    - 6700\n    - 6701\n    - 6702\n    - 6703\n```", "```scala\nwhirr.instance-templates=3 kafka,3 cassandra,1 storm-nimbus,3 storm-supervisor, 3 zookeeper\n```", "```scala\nwhirr.storm.supervisor.firewall-rules=[role1]:[port1],[role2]:[port2]\n```", "```scala\nwhirr.storm.supervisor.firewall-rules=cassandra:9160,kafka:9092\n```", "```scala\n$ vagrant --version\nVagrant 1.3.5\n\n```", "```scala\n$ vagrant init precise64 http://files.vagrantup.com/precise64.box\n\nA `Vagrantfile` has been placed in this directory. You are now\nready to `vagrant up` your first virtual environment! Please read\nthe comments in the Vagrantfile as well as documentation on\n`vagrantup.com` for more information on using Vagrant.\n\n```", "```scala\n$ vagrant up\n\n```", "```scala\n$ vagrant ssh\nWelcome to Ubuntu 12.04 LTS (GNU/Linux 3.2.0-23-generic x86_64)\n\n * Documentation:  https://help.ubuntu.com/\nWelcome to your Vagrant-built virtual machine.\nLast login: Fri Sep 14 06:23:18 2012 from 10.0.2.2\nvagrant@precise64:~$\n\n```", "```scala\n$ vagrant destroy\nAre you sure you want to destroy the 'default' VM? [y/N] y\n[default] Forcing shutdown of VM...\n[default] Destroying VM and associated drives...\n\n```", "```scala\nVAGRANTFILE_API_VERSION = \"2\"\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  config.vm.box = \"precise64\"\n  config.vm.box_url = \"http://files.vagrantup.com/precise64.box\"\nend\n```", "```scala\n$ vagrant ssh\nvagrant@precise64:~$ ls /vagrant/\nVagrantfile\n\n```", "```scala\n#!/bin/bash\napt-get update\napt-get install -y apache2\n\n```", "```scala\nconfig.vm.provision \"shell\", path: \"install_apache.sh\"\n```", "```scala\nconfig.vm.network \"forwarded_port\", guest: 80, host: 8080\n```", "```scala\nVAGRANTFILE_API_VERSION = \"2\"\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n  config.vm.box = \"precise64\"\n  config.vm.box_url = \"http://files.vagrantup.com/precise64.box\"\n  config.vm.provision \"shell\", path: \"install_apache.sh\"\n  config.vm.network \"forwarded_port\", guest: 80, host: 8080\nend\n```", "```scala\nVAGRANTFILE_API_VERSION = \"2\"\n\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n\n  config.vm.define \"www1\" do |www1|\n    www1.vm.box = \"precise64\"\n    www1.vm.box_url = \"http://files.vagrantup.com/precise64.box\"\n    www1.vm.provision \"shell\", path: \"apache.sh\"\n    www1.vm.network \"forwarded_port\", guest: 80, host: 8080\n  end\n\n  config.vm.define \"www2\" do |www2|\n    www2.vm.box = \"precise64\"\n    www2.vm.box_url = \"http://files.vagrantup.com/precise64.box\"\n    www2.vm.provision \"shell\", path: \"apache.sh\"\n    www2.vm.network \"forwarded_port\", guest: 80, host: 7070\n  end\n\nend\n```", "```scala\nvagrant up www1\n\n```", "```scala\nvagrant destroy www1\n\n```", "```scala\ninstall-zookeeper.sh\n\n```", "```scala\napt-get update\napt-get --yes install zookeeper=3.3.5* zookeeperd=3.3.5*\n```", "```scala\ninstall-storm.sh\n\n```", "```scala\napt-get update\napt-get install -y unzip supervisor openjdk-6-jdk\n\n/etc/init.d/supervisor stop\n\ngroupadd storm\nuseradd --gid storm --home-dir /home/storm --create-home --shell /bin/bash storm\n\nunzip -o /vagrant/$1.zip -d /usr/share/\nchown -R storm:storm /usr/share/$1\nln -s /usr/share/$1 /usr/share/storm\nln -s /usr/share/storm/bin/storm /usr/bin/storm\n\nmkdir /etc/storm\nchown storm:storm /etc/storm\n\nrm /usr/share/storm/conf/storm.yaml\ncp /vagrant/storm.yaml /usr/share/storm/conf/\ncp /vagrant/cluster.xml /usr/share/storm/logback/\nln -s /usr/share/storm/conf/storm.yaml /etc/storm/storm.yaml \n\nmkdir /var/log/storm\nchown storm:storm /var/log/storm\n```", "```scala\nstorm.yaml\n\n```", "```scala\nstorm.zookeeper.servers:\n    - \"zookeeper\"\n\nnimbus.host: \"nimbus\"\n\n# netty transport\nstorm.messaging.transport: \"backtype.storm.messaging.netty.Context\"\nstorm.messaging.netty.buffer_size: 16384\nstorm.messaging.netty.max_retries: 10\nstorm.messaging.netty.min_wait_ms: 1000\nstorm.messaging.netty.max_wait_ms: 5000\n\ndrpc.servers:\n  - \"nimbus\"\n```", "```scala\nconfigure-supervisord.sh\n\n```", "```scala\necho [program:storm-$1] | sudo tee -a /etc/supervisor/conf.d/storm-$1.conf\necho command=storm $1 | sudo tee -a /etc/supervisor/conf.d/storm-$1.conf\necho directory=/home/storm | sudo tee -a /etc/supervisor/conf.d/storm-$1.conf\necho autorestart=true | sudo tee -a /etc/supervisor/conf.d/storm-$1.conf\necho user=storm | sudo tee -a /etc/supervisor/conf.d/storm-$1.conf\n```", "```scala\nsh configure-supervisord.sh nimbus\n\n```", "```scala\nvagrant plugin install vagrant-hostmanager\n\n```", "```scala\nrequire 'uri'\n# Configuration\nSTORM_DIST_URL = \"https://dl.dropboxusercontent.com/s/dj86w8ojecgsam7/storm-0.9.0.1.zip\"\nSTORM_SUPERVISOR_COUNT = 2\nSTORM_BOX_TYPE = \"precise64\"\n# end Configuration\n\nSTORM_ARCHIVE = File.basename(URI.parse(STORM_DIST_URL).path)\nSTORM_VERSION = File.basename(STORM_ARCHIVE, '.*')\n\n# Vagrantfile API/syntax version. Don't touch unless you know what you're doing!\nVAGRANTFILE_API_VERSION = \"2\"\nVagrant.configure(VAGRANTFILE_API_VERSION) do |config|\n\n  config.hostmanager.manage_host = true\n  config.hostmanager.enabled = true\n  config.vm.box = STORM_BOX_TYPE\n\n  if(!File.exist?(STORM_ARCHIVE))\n    `wget -N #{STORM_DIST_URL}`\n  end\n\n  config.vm.define \"zookeeper\" do |zookeeper|\n    zookeeper.vm.network \"private_network\", ip: \"192.168.50.3\"\n    zookeeper.vm.hostname = \"zookeeper\"\n    zookeeper.vm.provision \"shell\", path: \"install-zookeeper.sh\"\n  end\n\n  config.vm.define \"nimbus\" do |nimbus|\n    nimbus.vm.network \"private_network\", ip: \"192.168.50.4\"\n    nimbus.vm.hostname = \"nimbus\"\n    nimbus.vm.provision \"shell\", path: \"install-storm.sh\", args: STORM_VERSION\n    nimbus.vm.provision \"shell\", path: \"config-supervisord.sh\", args: \"nimbus\"\n    nimbus.vm.provision \"shell\", path: \"config-supervisord.sh\", args: \"ui\"\n    nimbus.vm.provision \"shell\", path: \"config-supervisord.sh\", args: \"drpc\"\n    nimbus.vm.provision \"shell\", path: \"start-supervisord.sh\"\n  end\n\n  (1..STORM_SUPERVISOR_COUNT).each do |n|\n    config.vm.define \"supervisor#{n}\" do |supervisor|\n      supervisor.vm.network \"private_network\", ip: \"192.168.50.#{4 + n}\"\n      supervisor.vm.hostname = \"supervisor#{n}\"\n      supervisor.vm.provision \"shell\", path: \"install-storm.sh\", args: STORM_VERSION\n      supervisor.vm.provision \"shell\", path: \"config-supervisord.sh\", args: \"supervisor\"\n      supervisor.vm.provision \"shell\", path: \"config-supervisord.sh\", args: \"logviewer\"\n      supervisor.vm.provision \"shell\", path: \"start-supervisord.sh\"\n    end\n  end\nend\n```", "```scala\n  config.hostmanager.manage_host = true\n  config.hostmanager.enabled = true\n```", "```scala\n  if(!File.exist?(STORM_ARCHIVE))\n    `wget -N #{STORM_DIST_URL}`\n  end\n```", "```scala\n    zookeeper.vm.network \"private_network\", ip: \"192.168.50.3\"\n    zookeeper.vm.hostname = \"zookeeper\"\n```", "```scala\nstorm jar myTopology.jar com.example.MyTopology my-topology -c nimbus.host=nimbus\n\n```"]