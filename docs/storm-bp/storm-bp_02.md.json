["```scala\nsudo apt-get update\nsudo apt-get --yes install openjdk-6-jdk\n\n```", "```scala\nsudo apt-get --yes install zookeeper=3.3.5* zookeeperd=3.3.5*\n\n```", "```scala\nsudo groupadd storm\nsudo useradd --gid storm --home-dir /home/storm --create-home --shell /bin/bash storm\n\n```", "```scala\nsudo wget [storm download URL]\nsudo unzip -o apache-storm-0.9.1-incubating.zip -d /usr/share/\nsudo ln -s /usr/share/apache-storm-0.9.1-incubating /usr/share/storm\nsudo ln -s /usr/share/storm/bin/storm /usr/bin/storm\n\n```", "```scala\nsudo mkdir /var/log/storm\nsudo chown storm:storm /var/log/storm\n\nsudo sed -i 's/${storm.home}\\/logs/\\/var\\/log\\/storm/g' /usr/share/storm/log4j/storm.log.properties\n\n```", "```scala\nsudo mkdir /etc/storm\nsudo chown storm:storm /etc/storm\nsudo mv /usr/share/storm/conf/storm.yaml /etc/storm/\nsudo ln -s /etc/storm/storm.yaml /usr/share/storm/conf/storm.yaml\n\n```", "```scala\nsudo apt-get --yes install supervisor\n\n```", "```scala\n    [program:storm-nimbus]\n    command=storm nimbus\n    directory=/home/storm\n    autorestart=true\n    user=storm\n    ```", "```scala\n    [program:storm-supervisor]\n    command=storm supervisor\n    directory=/home/storm\n    autorestart=true\n    user=storm\n    ```", "```scala\n    [program:storm-ui]\n    command=storm ui\n    directory=/home/storm\n    autorestart=true\n    user=storm\n    ```", "```scala\nsudo /etc/init.d/supervisor stop\nsudo /etc/init.d/supervisor start\n\n```", "```scala\n# List of hosts in the zookeeper cluster\nstorm.zookeeper.servers:\n - \"localhost\"\n\n# hostname of the nimbus node\nnimbus.host: \"localhost\"\n\n# supervisor worker ports\nsupervisor.slots.ports:\n - 6700\n - 6701\n - 6702\n - 6703\n\n# where nimbus and supervisors should store state data\nstorm.local.dir: \"/home/storm\"\n\n# List of hosts that are Storm DRPC servers (optional)\n# drpc.servers:\n#    - \"localhost\"\n\n```", "```scala\nstorm [command] [arguments...]\n```", "```scala\nSample: ~/.storm/storm.yaml file.\nnimbus.host: \"nimbus01.\"\n\n```", "```scala\nnimbus.host: \"nimbus01\"\n\n```", "```scala\nstorm rebalance wordcount-topology -w 15 -n 5 -e sentence-spout=4 -e split-bolt=8\n```", "```scala\nLocalCluster cluster = new LocalCluster();\n            cluster.submitTopology(TOPOLOGY_NAME, config, builder.createTopology());\n```", "```scala\nStormSubmitter.submitTopology(TOPOLOGY_NAME, config, builder.createTopology());\n```", "```scala\npublic class WordCountTopology {\n\n    private static final String SENTENCE_SPOUT_ID = \"sentence-spout\";\n    private static final String SPLIT_BOLT_ID = \"split-bolt\";\n    private static final String COUNT_BOLT_ID = \"count-bolt\";\n    private static final String REPORT_BOLT_ID = \"report-bolt\";\n    private static final String TOPOLOGY_NAME = \"word-count-topology\";\n\n    public static void main(String[] args) throws Exception {\n\n        SentenceSpout spout = new SentenceSpout();\n        SplitSentenceBolt splitBolt = new SplitSentenceBolt();\n        WordCountBolt countBolt = new WordCountBolt();\n        ReportBolt reportBolt = new ReportBolt();\n\n        TopologyBuilder builder = new TopologyBuilder();\n\n        builder.setSpout(SENTENCE_SPOUT_ID, spout, 2);\n        // SentenceSpout --> SplitSentenceBolt\n        builder.setBolt(SPLIT_BOLT_ID, splitBolt, 2)\n                .setNumTasks(4)\n                .shuffleGrouping(SENTENCE_SPOUT_ID);\n        // SplitSentenceBolt --> WordCountBolt\n        builder.setBolt(COUNT_BOLT_ID, countBolt, 4)\n                .fieldsGrouping(SPLIT_BOLT_ID, new Fields(\"word\"));\n        // WordCountBolt --> ReportBolt\n        builder.setBolt(REPORT_BOLT_ID, reportBolt)\n                .globalGrouping(COUNT_BOLT_ID);\n\n        Config config = new Config();\n        config.setNumWorkers(2);\n\n        if(args.length == 0){\n            LocalCluster cluster = new LocalCluster();\n            cluster.submitTopology(TOPOLOGY_NAME, config, builder.createTopology());\n            waitForSeconds(10);\n            cluster.killTopology(TOPOLOGY_NAME);\n            cluster.shutdown();\n        } else{\n            StormSubmitter.submitTopology(args[0], config, builder.createTopology());\n        }\n    }\n}\n```", "```scala\nmvn clean install\n\n```", "```scala\nstorm jar ./target/Chapter1-1.0-SNAPSHOT.jar storm.blueprints.chapter1.WordCountTopology wordcount-topology\n\n```", "```scala\n    package { 'zookeeper':\n        ensure => \"3.3.5*\",\n    }\n    package { 'zookeeperd':\n        ensure => \"3.3.5*\",\n        require => Package[\"zookeeper\"],\n    }\n\n    service { 'zookeeperd':\n        ensure => 'running',\n        require => Package[\"zookeeperd\"],\n    }\n```", "```scala\nwget http://apt.puppetlabs.com/puppetlabs-release-precise.deb\nsudo dpkg -i puppetlabs-release-precise.deb\nsudo apt-get update\n```", "```scala\nsudo puppet apply init.pp\n\n```", "```scala\nservice zookeeper status\n\n```", "```scala\nclass zookeeper {\n\n    include 'jdk'\n\n    package { 'zookeeper':\n        ensure => \"3.3.5*\",\n    }\n    package { 'zookeeperd':\n        ensure => \"3.3.5*\",\n        require => Package[\"zookeeper\"],\n    }\n\n    service { 'zookeeperd':\n        ensure => 'running',\n        require => Package[\"zookeeperd\"],\n    }\n}\n```", "```scala\n    file { \"storm-etc-config\":\n        path => \"/etc/storm/storm.yaml\",\n        ensure => file,\n        content => template(\"storm/storm.yaml.erb\"),\n        require => [File['storm-etc-config-dir'], File['storm-share-symlink']],\n    }\n```", "```scala\nstorm.zookeeper.servers:\n<% @zookeeper_hosts.each do |host| -%>\n     - <%= host %>\n<% end -%>\n\nnimbus.host: <%= @nimbus_host %>\n\nstorm.local.dir: <%= @storm_local_dir %>\n\n<% if @supervisor_ports != 'none' %>\nsupervisor.slots.ports:\n<% @supervisor_ports.each do |port| -%>\n    - <%= port %>\n<% end -%>\n<% end %>\n\n<% if @drpc_servers != 'none' %>\n<% @drpc_servers.each do |drpc| -%>\n    - <%= drpc %>\n<% end -%>\n<% end %>\n```", "```scala\n$java_version = \"1.6.0\"\n\n```", "```scala\nstorm.version: apache-storm-0.9.1-incubating\n\n# options are oracle-jdk, openjdk\njdk.vendor: openjdk\n# options are 6, 7, 8\njdk.version: 7\n```", "```scala\n# hosts entries for name resolution (template params for /etc/hosts)\nhosts:\n   nimbus01: 192.168.1.10\n   zookeeper01: 192.168.1.11\n   supervisor01: 192.168.1.12\n   supervisor02: 192.168.1.13\n   supervisor04: 192.168.1.14\n\nstorm.nimbus.host: nimbus01\n\nstorm.zookeeper.servers:\n     - zookeeper01\n\nstorm.supervisor.slots.ports:\n     - 6700\n     - 6701\n     - 6702\n     - 6703\n     - 6705\n```", "```scala\n# this node only acts as a nimus node\nclasses:\n    - nimbus\n```", "```scala\n# this node is strictly a zookeeper node\nclasses:\n    - zookeeper\n```"]